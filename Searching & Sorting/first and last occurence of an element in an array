#include<iostream>
using namespace std;
int leftMost(int arr[], int n, int key) {
	int s=0;
	int e=n;
	int mid, ans;
	while(s<=e) {
		mid=s+(e-s)/2;
	if(key==arr[mid]) {
		 ans = mid;
		e=mid-1;
	}
	else if(key<arr[mid]) {
		e=mid-1;
	}
	else {
		s=mid+1;
	}
}
return ans;
}
int rightMost(int arr[], int n, int key) {
	int s=0;
	int e=n;
	int mid,ans;
	while(s<=e) {
		mid=s+(e-s)/2;
	if(key==arr[mid]) {
		ans = mid;
		s=mid+1;
	}
	else if(key<arr[mid]) {
		e=mid-1;
	}
	else {
		s=mid+1;
	}
	
}
return ans;
}
int main() {
	int arr[5]={1,2,2,2,3};
	cout<<"leftMost= "<<leftMost(arr,5, 2)<<endl;
	cout<<"right Most= "<<rightMost(arr,5, 2);
	return 0;
}
